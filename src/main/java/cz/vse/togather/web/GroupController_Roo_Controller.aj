// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cz.vse.togather.web;

import cz.vse.togather.domain.CategoryEnum;
import cz.vse.togather.domain.Comment;
import cz.vse.togather.domain.Event;
import cz.vse.togather.domain.Group;
import cz.vse.togather.domain.Membership;
import cz.vse.togather.web.GroupController;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import javax.servlet.http.HttpServletRequest;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect GroupController_Roo_Controller {
    
    @RequestMapping(params = "form", produces = "text/html")
    public String GroupController.createForm(Model uiModel) {
        populateEditForm(uiModel, new Group());
        return "groups/create";
    }
    
    @RequestMapping(produces = "text/html")
    public String GroupController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("groups", Group.findGroupEntries(firstResult, sizeNo, sortFieldName, sortOrder));
            float nrOfPages = (float) Group.countGroups() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("groups", Group.findAllGroups(sortFieldName, sortOrder));
        }
        return "groups/list";
    }
    
    void GroupController.populateEditForm(Model uiModel, Group group) {
        uiModel.addAttribute("group", group);
        uiModel.addAttribute("categoryenums", Arrays.asList(CategoryEnum.values()));
        uiModel.addAttribute("comments", Comment.findAllComments());
        uiModel.addAttribute("events", Event.findAllEvents());
        uiModel.addAttribute("memberships", Membership.findAllMemberships());
    }
    
    String GroupController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
